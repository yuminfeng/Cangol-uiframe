apply plugin: 'com.android.library'

dependencies {
    //只在编译时有效，不会参与打包
    compileOnly fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.slidingpanelayout:slidingpanelayout:1.2.0'
}

android {
    compileSdkVersion Integer.decode("$sdk_version")

    defaultConfig {
        minSdkVersion Integer.decode("$min_version")
        targetSdkVersion Integer.decode("$target_version")
        multiDexEnabled true
        versionCode Integer.decode("${POM_VERSION_CODE}")
        versionName "${POM_VERSION}"
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    //自定义aar名称
    android.libraryVariants.all {
        variant ->
            variant.outputs.all {
                def fileName = "${POM_NAME}" + "_V" + "${POM_VERSION}" + ".aar"
                outputFileName = fileName
            }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options {
        encoding "UTF-8"
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
    }
    destinationDir = file("../docs/")
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}